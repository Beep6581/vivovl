--- src/Makefile.orig	2016-06-05 17:10:45.157512715 +0000
+++ src/Makefile	2016-06-05 17:48:27.649575910 +0000
@@ -127,7 +127,6 @@
 ifndef NO_SRIPDLIB
 MANDATORY_CFLAGS += -std=c++11
 endif
-MANDATORY_LIBS += -L$(USR)/$(LIB)
 ifeq ($(notdir $(CXX)),g++)
 MANDATORY_CFLAGS += -Wall -Wextra
 MANDATORY_LIBS += -lm
@@ -229,8 +228,8 @@
 
 # Flags to enable native support for MINC2 image files, using the MINC2 library.
 # ( http://en.wikibooks.org/wiki/MINC/Reference/MINC2.0_Users_Guide )
-MINC2_CFLAGS = -Dcimg_use_minc2 -I${HOME}/local/include
-MINC2_LIBS = -lminc_io -lvolume_io2 -lminc2 -lnetcdf -lhdf5 -lz -L${HOME}/local/lib
+MINC2_CFLAGS = -Dcimg_use_minc2
+MINC2_LIBS = -lminc_io -lvolume_io2 -lminc2 -lnetcdf -lhdf5 -lz
 
 # Flags to enable native support for downloading files from the network.
 # ( http://curl.haxx.se/libcurl/ )
@@ -448,20 +447,19 @@
 
 libgmic.o: gmic.cpp gmic.h gmic_stdlib.h CImg.h
 	$(CXX) -o libgmic.o -c gmic.cpp $(PIC) $(CFLAGS)
-libgmic: libgmic.o use_libgmic.cpp
-	ar rcs libgmic.a libgmic.o
+libgmic: libgmic.o
+	$(AR) rcs libgmic.a libgmic.o
 ifeq ($(OS),Darwin)
-	$(CXX) -shared -o libgmic.so libgmic.o $(LIBS)
+	$(CXX) $(LDFLAGS) -shared -o libgmic.so libgmic.o $(LIBS)
 else
-	$(CXX) -shared -Wl,-soname,libgmic.so.1 -o libgmic.so libgmic.o $(LIBS)
-	$(CXX) -o use_libgmic use_libgmic.cpp -L. -lgmic $(LIBS)
+	$(CXX) $(LDFLAGS) -shared -Wl,-soname,libgmic.so.1 -o libgmic.so libgmic.o $(LIBS)
 endif
 
 libcgmic.o: gmic.cpp gmic.h gmic_stdlib.h CImg.h
 	$(CXX) -o libcgmic.o -c gmic_libc.cpp $(PIC) $(CFLAGS)
 libcgmic: libcgmic.o libgmic.o
 ifeq ($(OS),Darwin)
-	ar rcs libcgmic.a libcgmic.o
+	$(AR) rcs libcgmic.a libcgmic.o
 	$(CXX) -shared -o libcgmic.so libcgmic.o libgmic.o $(LIBS)
 else
 ifeq ($(OS),Windows)
@@ -476,7 +474,7 @@
 	$(CXX) -o libcgmicstatic.o -c gmic_libc.cpp $(PIC) $(CFLAGS)
 libcgmicstatic: libcgmicstatic.o libgmic.o
 ifeq ($(OS),Darwin)
-	ar rcs libcgmicstatic.a libcgmicstatic.o
+	$(AR) rcs libcgmicstatic.a libcgmicstatic.o
 	$(CXX) -shared -static -o libcgmicstatic.so libcgmicstatic.o libgmic.o $(PIC) $(CFLAGS) $(LIBS)
 else
 ifeq ($(OS),Windows)
@@ -495,7 +493,7 @@
 ifeq (,$(wildcard /tmp/skl))
 	$(CXX) -o gmic_gimp gmic_gimp.cpp gmic_gimp.o -Dgmic_gimp `gimptool-2.0$(EXE) --cflags` `gimptool-2.0$(EXE) --libs` $(CFLAGS) $(LIBS)
 else
-	$(CXX) -o gmic_gimp gmic_gimp.cpp gmic_gimp.o -Dgmic_gimp `gimptool-2.0$(EXE) --cflags` $(subst -L/opt/local,-L/tmp/skl/Gimp.app/Contents/Resources,$(shell gimptool-2.0$(EXE) --libs) $(CFLAGS) $(LIBS))
+	$(CXX) -o gmic_gimp gmic_gimp.cpp gmic_gimp.o -Dgmic_gimp `gimptool-2.0$(EXE) --cflags` $(CFLAGS) $(LDFLAGS) $(shell gimptool-2.0$(EXE) --libs) $(LIBS)
 endif
 else
 	$(CXX) -o gmic_gimp gmic_gimp.cpp gmic_gimp.o -Dgmic_gimp `gimptool-2.0$(EXE) --cflags` `gimptool-2.0$(EXE) --libs` $(CFLAGS) $(LIBS)
@@ -503,7 +501,7 @@
 	$(STRIP) gmic_gimp$(EXE)
 
 gmic: gmic.cpp gmic.h gmic_stdlib.h CImg.h
-	$(CXX) -o gmic gmic.cpp -Dgmic_main $(CFLAGS) $(LIBS)
+	$(CXX) -o gmic gmic.cpp -Dgmic_main $(CFLAGS) $(LDFLAGS) $(LIBS)
 
 gmic_stdlib.h:
 	@echo -n "> Retrieve G'MIC Standard Library..."
@@ -576,21 +574,22 @@
 # Generate bash completion script (requires 'gmic' to be installed first).
 bashcompletion:
 	@mkdir -p ../resources
-	@\gmic -v - gmic_stdlib.gmic raw:gmic_stdlib.gmic,uchar -document_gmic bash 2> ../resources/gmic_bashcompletion.sh
+	@./gmic -v - gmic_stdlib.gmic raw:gmic_stdlib.gmic,uchar -document_gmic bash 2> ../resources/gmic_bashcompletion.sh
 
 # Generate man page (requires 'gmic' to be installed first).
 man:
 	@mkdir -p ../man
-	@\gmic -v - gmic_stdlib.gmic raw:gmic_stdlib.gmic,uchar -__help man 2> ../man/gmic.1
-	@gzip -f ../man/gmic.1
+	@./gmic -v - gmic_stdlib.gmic raw:gmic_stdlib.gmic,uchar -__help man 2> ../man/gmic.1
 
 # Install/uninstall/clean procedures.
-install:
+install-gimp:
 	mkdir -p $(DESTDIR)$(PLUGINDIR)/
 	cp -f gmic_gimp $(DESTDIR)$(PLUGINDIR)/
 	cp -f ../resources/gmic_film_cluts.gmz $(DESTDIR)$(PLUGINDIR)/
+install-bin:
 	mkdir -p $(DESTDIR)$(USR)/$(BIN)/
 	cp -f gmic $(DESTDIR)$(USR)/$(BIN)/
+install-lib:
 	mkdir -p $(DESTDIR)$(USR)/$(INCLUDE)/
 	cp -f gmic.h $(DESTDIR)$(USR)/$(INCLUDE)/
 	cp -f gmic_libc.h $(DESTDIR)$(USR)/$(INCLUDE)/
@@ -604,15 +603,16 @@
 	cp -f libcgmic.so $(DESTDIR)$(USR)/$(LIB)/libcgmic.so.1.7.2
 	ln -fs libcgmic.so.1.7.2 $(DESTDIR)$(USR)/$(LIB)/libcgmic.so.1
 	ln -fs libcgmic.so.1 $(DESTDIR)$(USR)/$(LIB)/libcgmic.so
-	cp -f ../zart/zart $(DESTDIR)$(USR)/$(BIN)/
 endif
+install-man:
 	mkdir -p $(DESTDIR)$(USR)/share/man/
 	mkdir -p $(DESTDIR)$(USR)/share/man/man1/
-	mkdir -p $(DESTDIR)$(USR)/share/man/fr/man1/
-	cp -f ../man/gmic.1.gz $(DESTDIR)$(USR)/share/man/man1/gmic.1.gz
-	cp -f ../man/gmic.1.gz $(DESTDIR)$(USR)/share/man/fr/man1/gmic.1.gz
+	cp -f ../man/gmic.1 $(DESTDIR)$(USR)/share/man/man1/gmic.1
+install-bash:
 	if [ -d /etc/bash_completion.d/ ]; then mkdir -p $(DESTDIR)/etc/bash_completion.d/; cp -f ../resources/gmic_bashcompletion.sh $(DESTDIR)/etc/bash_completion.d/gmic; fi
-	if [ -d /opt/local/etc/bash_completion.d/ ]; then mkdir -p $(DESTDIR)/opt/local/etc/bash_completion.d/; cp -f ../resources/gmic_bashcompletion.sh $(DESTDIR)/opt/local/etc/bash_completion.d/gmic; fi
+install-zart:
+	cp -f ../zart/zart $(DESTDIR)$(USR)/$(BIN)/
+
 
 uninstall:
 	rm -f $(DESTDIR)$(USR)/$(BIN)/gmic
@@ -625,8 +625,7 @@
 	rm -f $(DESTDIR)$(USR)/$(LIB)/libcgmic.so.1
 	rm -f $(DESTDIR)$(USR)/$(LIB)/libcgmic$(SO)
 	rm -rf $(DESTDIR)$(USR)/share/doc/gmic/
-	rm -f $(DESTDIR)$(USR)/share/man/man1/gmic.1.gz
-	rm -f $(DESTDIR)$(USR)/share/man/fr/man1/gmic.1.gz
+	rm -f $(DESTDIR)$(USR)/share/man/man1/gmic.1
 
 distclean: clean
 
